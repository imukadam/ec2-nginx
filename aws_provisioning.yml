---
- hosts: local
  connection: local
  gather_facts: false
  vars:
    instance_type: t2.micro
    security_group: im-webserver
    image: ami-c7ab5fa0
    keypair: imran-key
    region: eu-west-2
    count: 1
    env: lab-01
  vars_files:
    - aws_pass.yml

  tasks:
    - name: Create ssh key
      ec2_key:
        name: "{{ keypair }}"
        key_material: "{{ lookup('file', '/Users/imu04/.ssh/id_rsa.pub') }}"
        region: "{{ region }}"

    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Launch an EC2 Ubuntu Instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        exact_count: "{{count}}"
        count_tag:
          Type: webserver
      register: webserver

    - name: Add the newly created EC2 instance(s) to the local host group
      local_action: lineinfile
                    dest="./hosts"
                    regexp={{ item.public_ip }}
                    insertafter="[webservers]" line={{ item.public_ip }}
      with_items: "{{ webserver.instances }}"

    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
      with_items: "{{ webserver.instances }}"
      args:
        tags:
          Type: webserver

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ webserver.instances }}"

- hosts: webservers
  gather_facts: false

  tasks:
    - name: perform an aptitude safe-upgrade
      remote_user: ubuntu
      become: true
      apt:
        upgrade: safe
        update_cache: yes
        autoclean: yes
        autoremove: yes

    - name: Install nginx
      remote_user: ubuntu
      become: true
      apt:
        name: nginx
        state: latest

    - name: start nginx
      remote_user: ubuntu
      become: true
      service:
        name: nginx
        state: started

